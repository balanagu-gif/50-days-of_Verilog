module traffic_light_moore (
    input  wire clk,
    input  wire reset,
    output reg red,
    output reg yellow,
    output reg green
);

    // State encoding
    typedef enum logic [1:0] {
        RED    = 2'b00,
        GREEN  = 2'b01,
        YELLOW = 2'b10
    } state_t;

    state_t current_state, next_state;

    // State transition
    always_ff @(posedge clk or posedge reset) begin
        if (reset)
            current_state <= RED;
        else
            current_state <= next_state;
    end

    // Next state logic
    always_comb begin
        case (current_state)
            RED:    next_state = GREEN;
            GREEN:  next_state = YELLOW;
            YELLOW: next_state = RED;
            default: next_state = RED;
        endcase
    end

    // Output logic (Moore â€“ depends only on state)
    always_comb begin
        // default values
        red = 0; yellow = 0; green = 0;
        case (current_state)
            RED:    red    = 1;
            GREEN:  green  = 1;
            YELLOW: yellow = 1;
        endcase
    end

endmodule
